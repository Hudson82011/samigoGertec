def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.tecnoweb.sammi_gov2"
        minSdkVersion 22
        targetSdkVersion 33
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        gertec {
            storeFile file('..\\..\\Chaves\\Development_GertecDeveloper_CustomerAPP.jks')
            storePassword 'Development@GertecDeveloper2018'
            keyAlias 'developmentgertecdeveloper_customerapp'
            keyPassword 'Development@GertecDeveloper2018'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled false
           // signingConfig signingConfigs.elgin
        }
        debug {
            signingConfig signingConfigs.gertec
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //implementation(name: 'payment-1.14.10.181016', ext: 'aar')
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation('com.journeyapps:zxing-android-embedded:3.4.0')
    implementation 'com.google.zxing:core:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation('com.journeyapps:zxing-android-embedded:3.4.0')
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'


    implementation files('libs/libgedi-1.16.8-gpos700-payment-release.aar')

   // implementation files('libs/libgedi-0.16.20-gpos720-payment-release.aar')

    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.google.zxing:core:3.4.1'

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.google.code.gson:gson:2.8.6'


}